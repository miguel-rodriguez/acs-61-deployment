properties([pipelineTriggers([githubPush()])])

node { git url: 'https://github.com/miguel-rodriguez/acs-61-deployment.git', branch: 'master' }

pipeline {
    agent any
    stages {
        stage('Build AMIs') {
            steps {
                parallel (
                    "Build Repo AMI" : {
                        sh '''export PACKER_LOG=1 
                        export PACKER_LOG_PATH=build.log
                        pwd && cd ./acs-61-repo-aws-packer
                        pwd && ./build-ACS-61-Repo-AMI.sh
                        grep ami build.log | tail -1 | awk \'{print $2}\' > ami.out
                        echo "Replacing AMI" `cat ami.out` "in terraform.tfvars"
                        head ami.out | xargs -I {} sed -E -i \'s/autoscaling-repo-group-image-id.*$/autoscaling-repo-group-image-id = "{}"/g\' ../acs-61-aws-terraform/terraform.tfvars'''
                    },
                    "Build Search AMI" : {
                        sh '''export PACKER_LOG=1 
                        export PACKER_LOG_PATH=build.log
                        pwd && cd ./acs-61-search-aws-packer
                        pwd && ./build-ACS-61-Search-AMI.sh
                        grep ami build.log | tail -1 | awk \'{print $2}\' > ami.out
                        echo "Replacing AMI" `cat ami.out` "in terraform.tfvars"
                        head ami.out | xargs -I {} sed -E -i \'s/autoscaling-solr-group-image-id.*$/autoscaling-solr-group-image-id = "{}"/g\' ../acs-61-aws-terraform/terraform.tfvars'''
                    },
                    "Build Transformation Services AMI" : {
                        sh '''
                        export PACKER_LOG=1 
                        export PACKER_LOG_PATH=build.log
                        cd ./acs-61-transformation-services-aws-packer
                        ./build-Transformation-Services-AMI.sh
                        grep ami build.log | tail -1 | awk \'{print $2}\' > ami.out
                        echo "Replacing AMI" `cat ami.out` "in terraform.tfvars"
                        head ami.out | xargs -I {} sed -E -i \'s/autoscaling-ts-group-image-id.*$/autoscaling-ts-group-image-id = "{}"/g\' ../acs-61-aws-terraform/terraform.tfvars
                        '''
                    }                    
                )
            }
        }
        stage("Build AWS Infrastructure with ACS 6.1") {
            steps {
                sh '''
                cd acs-61-aws-terraform
                /usr/local/bin/terraform-11-08 init
                echo yes | /usr/local/bin/terraform-11-08 apply
                '''
            }
        }
    }
}